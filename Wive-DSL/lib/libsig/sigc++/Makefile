# Makefile.in generated by automake 1.10.2 from Makefile.am.
# sigc++/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008  Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.






pkgdatadir = $(datadir)/libsigc++
pkglibdir = $(libdir)/libsigc++
pkgincludedir = $(includedir)/libsigc++
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = i686-pc-linux-gnu
host_triplet = mips-unknown-elf
DIST_COMMON = $(dist_noinst_DATA) $(nobase_library_include_HEADERS) \
	$(srcdir)/Makefile.am $(srcdir)/Makefile.in \
	$(srcdir)/filelist.am
subdir = sigc++
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/build/cxx.m4 \
	$(top_srcdir)/build/cxx_std.m4 $(top_srcdir)/build/libtool.m4 \
	$(top_srcdir)/build/ltoptions.m4 \
	$(top_srcdir)/build/ltsugar.m4 \
	$(top_srcdir)/build/ltversion.m4 \
	$(top_srcdir)/build/lt~obsolete.m4 $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h \
	$(top_builddir)/sigc++config.h
CONFIG_CLEAN_FILES =
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = `echo $$p | sed -e 's|^.*/||'`;
am__installdirs = "$(DESTDIR)$(libdir)" \
	"$(DESTDIR)$(library_includedir)"
libLTLIBRARIES_INSTALL = $(INSTALL)
LTLIBRARIES = $(lib_LTLIBRARIES)
libsigc_2.0_la_LIBADD =
am__dirstamp = $(am__leading_dot)dirstamp
am_libsigc_2.0_la_OBJECTS = signal.lo signal_base.lo \
	trackable.lo connection.lo functors/slot.lo \
	functors/slot_base.lo adaptors/lambda/lambda.lo
libsigc_2.0_la_OBJECTS =  \
	$(am_libsigc_2.0_la_OBJECTS)
libsigc_2.0_la_LINK = $(LIBTOOL) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(AM_CXXFLAGS) $(CXXFLAGS) \
	$(libsigc_2.0_la_LDFLAGS) $(LDFLAGS) -o $@
DEFAULT_INCLUDES = 
depcomp = $(SHELL) $(top_srcdir)/build/depcomp
am__depfiles_maybe = depfiles
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
SOURCES = $(libsigc_2.0_la_SOURCES) \
	$(EXTRA_libsigc_2.0_la_SOURCES)
DIST_SOURCES = $(libsigc_2.0_la_SOURCES) \
	$(EXTRA_libsigc_2.0_la_SOURCES)
DATA = $(dist_noinst_DATA)
nobase_library_includeHEADERS_INSTALL = $(install_sh_DATA)
HEADERS = $(nobase_library_include_HEADERS)
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /opt/Wive-DSL-2.6/lib/libsig/build/missing --run aclocal-1.10
ACLOCAL_FLAGS = 
AMTAR = ${SHELL} /opt/Wive-DSL-2.6/lib/libsig/build/missing --run tar
AR = /opt/Wive-DSL-2.6/toolchain/bin/mips-linux-ar
AS = /opt/Wive-DSL-2.6/toolchain/bin/mips-linux-as 
AUTOCONF = ${SHELL} /opt/Wive-DSL-2.6/lib/libsig/build/missing --run autoconf
AUTOHEADER = ${SHELL} /opt/Wive-DSL-2.6/lib/libsig/build/missing --run autoheader
AUTOMAKE = ${SHELL} /opt/Wive-DSL-2.6/lib/libsig/build/missing --run automake-1.10
AWK = gawk
CC = /opt/Wive-DSL-2.6/toolchain/bin/mips-linux-gcc 
CCDEPMODE = depmode=gcc3
CFLAGS =  -Os -mips1 -fPIC -nostdinc -mno-memcpy -mno-split-addresses -fno-delete-null-pointer-checks -fno-strict-aliasing -D_LINUX_2_6_ -Dlinux -D__linux__ -DEMBED -DEMBEDDED  -D__MIPSEB__ -D__BIG_ENDIAN__ -DPIC  -I/opt/Wive-DSL-2.6/lib/uClibc/include -I/opt/Wive-DSL-2.6/lib/uClibc++/include  -I/opt/Wive-DSL-2.6/linux-2.6.x/include -idirafter /opt/toolchain-2.6/lib/gcc-lib/mips-linux-uclibc/3.3.3//include -I/opt/Wive-DSL-2.6
CPP = /opt/Wive-DSL-2.6/toolchain/bin/mips-linux-gcc  -E
CPPFLAGS = 
CXX = /opt/Wive-DSL-2.6/toolchain/bin/mips-linux-uclibc-g++ 
CXXCPP = /opt/Wive-DSL-2.6/toolchain/bin/mips-linux-uclibc-cpp
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -g -O2
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DLLTOOL = dlltool
DOCINSTALL_FLAGS = 
DOT = /usr/bin/dot
DOXYGEN = /usr/bin/doxygen
DOXYGEN_TAGFILES = "libstdc++.tag"
DSYMUTIL = 
DUMPBIN = link -dump -symbols
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /bin/grep -E
EXEEXT = 
FGREP = /bin/grep -F
GREP = /bin/grep
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
LD = /opt/Wive-DSL-2.6/toolchain/bin/mips-linux-ld
LDFLAGS = -Wl,-s
LIBOBJS = 
LIBS = 
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LIPO = 
LN_S = ln -s
LTLIBOBJS = 
M4 = m4
MAINT = #
MAKEINFO = ${SHELL} /opt/Wive-DSL-2.6/lib/libsig/build/missing --run makeinfo
MKDIR_P = /bin/mkdir -p
MMDOCTOOLDIR = ${top_srcdir}/docs
NM = link -dump -symbols
NMEDIT = 
OBJDUMP = objdump
OBJEXT = o
OTOOL = 
OTOOL64 = 
PACKAGE = libsigc++
PACKAGE_BUGREPORT = http://bugzilla.gnome.org/enter_bug.cgi?product=libsigc%2B%2B
PACKAGE_NAME = libsigc++
PACKAGE_STRING = libsigc++ 2.2.4.2
PACKAGE_TARNAME = libsigc++
PACKAGE_VERSION = 2.2.4.2
PATH_SEPARATOR = :
PERL = /usr/bin/perl
PKG_CONFIG = /usr/bin/pkg-config
RANLIB = /opt/Wive-DSL-2.6/toolchain/bin/mips-linux-ranlib
SED = /bin/sed
SET_MAKE = 
SHELL = /bin/sh
SIGCXX_API_VERSION = 2.0
SIGCXX_MAJOR_VERSION = 2
SIGCXX_MICRO_VERSION = 4
SIGCXX_MINOR_VERSION = 2
SIGCXX_MODULE_NAME = sigc++-2.0
SIGCXX_VERSION = 2.2.4.2
SIGC_WXXFLAGS = -Wall
STRIP = /opt/Wive-DSL-2.6/toolchain/bin/mips-linux-strip -s
VERSION = 2.2.4.2
XSLTPROC = /usr/bin/xsltproc
abs_builddir = /opt/Wive-DSL-2.6/lib/libsig/sigc++
abs_srcdir = /opt/Wive-DSL-2.6/lib/libsig/sigc++
abs_top_builddir = /opt/Wive-DSL-2.6/lib/libsig
abs_top_srcdir = /opt/Wive-DSL-2.6/lib/libsig
ac_ct_CC = 
ac_ct_CXX = 
ac_ct_DUMPBIN = link -dump -symbols
am__include = include
am__leading_dot = .
am__quote = 
am__tar = tar --format=posix -chf - "$$tardir"
am__untar = tar -xf -
bindir = ${exec_prefix}/bin
build = i686-pc-linux-gnu
build_alias = 
build_cpu = i686
build_os = linux-gnu
build_vendor = pc
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
host = mips-unknown-elf
host_alias = mips
host_cpu = mips
host_os = elf
host_vendor = unknown
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = $(SHELL) /opt/Wive-DSL-2.6/lib/libsig/build/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
lt_ECHO = echo
mandir = ${datarootdir}/man
mkdir_p = /bin/mkdir -p
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /opt/Wive-DSL-2.6/lib/libsig/filesystem
program_transform_name = s,x,x,
psdir = ${docdir}
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = ${prefix}/etc
target_alias = 
top_build_prefix = ../
top_builddir = ..
top_srcdir = ..
AUTOMAKE_OPTIONS = subdir-objects

# Base (./)
base_m4 = template.macros.m4 signal.h.m4 slot.h.m4 method_slot.h.m4 \
	  object_slot.h.m4 class_slot.h.m4 hide.h.m4 retype.h.m4 \
	  limit_reference.h.m4

base_built_cc = 
base_built_h = signal.h slot.h method_slot.h \
	       object_slot.h class_slot.h hide.h retype.h limit_reference.h


# Functors (functors/)
functors_m4 = functor_trait.h.m4 slot.h.m4 ptr_fun.h.m4 mem_fun.h.m4
functors_built_cc = 
functors_built_h = functor_trait.h slot.h ptr_fun.h mem_fun.h

# Adaptors (adaptors/)
adaptors_m4 = deduce_result_type.h.m4 adaptor_trait.h.m4 bind.h.m4 bind_return.h.m4 \
	      retype_return.h.m4 hide.h.m4 retype.h.m4 compose.h.m4 exception_catch.h.m4

adaptors_built_cc = 
adaptors_built_h = deduce_result_type.h adaptor_trait.h bind.h bind_return.h \
                   retype_return.h hide.h retype.h compose.h exception_catch.h


# Lambda (adaptors/lambda)
lambda_m4 = base.h.m4 select.h.m4 operator.h.m4 group.h.m4 lambda.cc.m4
lambda_built_cc = lambda.cc
lambda_built_h = base.h select.h operator.h group.h

# Combine all the above parts with right directories prefixed
sigc_m4 = $(base_m4:%=macros/%) \
	  $(functors_m4:%=functors/macros/%) \
          $(adaptors_m4:%=adaptors/macros/%) \
          $(lambda_m4:%=adaptors/lambda/macros/%)

sigc_built_cc = $(base_built_cc) \
	  $(functors_built_cc:%=functors/%) \
          $(adaptors_built_cc:%=adaptors/%) \
          $(lambda_built_cc:%=adaptors/lambda/%)

sigc_built_h = $(base_built_h) \
	  $(functors_built_h:%=functors/%) \
          $(adaptors_built_h:%=adaptors/%) \
          $(lambda_built_h:%=adaptors/lambda/%)

sigc_public_h = \
	bind.h				\
	bind_return.h			\
	connection.h			\
	object.h			\
	reference_wrapper.h		\
	retype_return.h			\
	signal_base.h			\
	trackable.h			\
	type_traits.h			\
	visit_each.h			\
	adaptors/adaptors.h		\
	adaptors/bound_argument.h	\
	adaptors/lambda/lambda.h	\
	functors/functors.h		\
	functors/slot_base.h


# Subdirectories needed also in the build dir
build_subdirs = functors adaptors/lambda
dist_noinst_DATA = $(sigc_m4)
library_includedir = $(includedir)/$(SIGCXX_MODULE_NAME)/sigc++
nobase_library_include_HEADERS = sigc++.h $(sigc_public_h) $(sigc_built_h)
lib_LTLIBRARIES = libsigc-2.0.la
libsigc_2.0_la_SOURCES = \
	signal.cc				\
	signal_base.cc				\
	trackable.cc				\
	connection.cc				\
	functors/slot.cc			\
	functors/slot_base.cc			\
	adaptors/lambda/lambda.cc

EXTRA_libsigc_2.0_la_SOURCES = $(sigc_built_cc)

# http://www.gnu.org/software/libtool/manual/html_node/Updating-version-info.html
libsigc_2.0_la_LDFLAGS = -no-undefined -version-info 0:0:0
AM_CPPFLAGS = -I$(top_builddir) -I$(top_srcdir)
AM_CXXFLAGS = $(SIGC_WXXFLAGS)
BUILT_SOURCES = $(build_subdirs) $(sigc_built_h) $(sigc_built_cc)
MAINTAINERCLEANFILES = $(sigc_built_h) $(sigc_built_cc)
m4_dir = $(srcdir)/macros
all: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) all-am

.SUFFIXES:
.SUFFIXES: .cc .lo .o .obj
$(srcdir)/Makefile.in: # $(srcdir)/Makefile.am $(srcdir)/filelist.am $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu  sigc++/Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --gnu  sigc++/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure: # $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4): # $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
install-libLTLIBRARIES: $(lib_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	test -z "$(libdir)" || $(MKDIR_P) "$(DESTDIR)$(libdir)"
	@list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	  if test -f $$p; then \
	    f=$(am__strip_dir) \
	    echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(libLTLIBRARIES_INSTALL) $(INSTALL_STRIP_FLAG) '$$p' '$(DESTDIR)$(libdir)/$$f'"; \
	    $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(libLTLIBRARIES_INSTALL) $(INSTALL_STRIP_FLAG) "$$p" "$(DESTDIR)$(libdir)/$$f"; \
	  else :; fi; \
	done

uninstall-libLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	  p=$(am__strip_dir) \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f '$(DESTDIR)$(libdir)/$$p'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f "$(DESTDIR)$(libdir)/$$p"; \
	done

clean-libLTLIBRARIES:
	-test -z "$(lib_LTLIBRARIES)" || rm -f $(lib_LTLIBRARIES)
	@list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	  dir="`echo $$p | sed -e 's|/[^/]*$$||'`"; \
	  test "$$dir" != "$$p" || dir=.; \
	  echo "rm -f \"$${dir}/so_locations\""; \
	  rm -f "$${dir}/so_locations"; \
	done
functors/$(am__dirstamp):
	@$(MKDIR_P) functors
	@: > functors/$(am__dirstamp)
functors/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) functors/$(DEPDIR)
	@: > functors/$(DEPDIR)/$(am__dirstamp)
functors/slot.lo: functors/$(am__dirstamp) \
	functors/$(DEPDIR)/$(am__dirstamp)
functors/slot_base.lo: functors/$(am__dirstamp) \
	functors/$(DEPDIR)/$(am__dirstamp)
adaptors/lambda/$(am__dirstamp):
	@$(MKDIR_P) adaptors/lambda
	@: > adaptors/lambda/$(am__dirstamp)
adaptors/lambda/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) adaptors/lambda/$(DEPDIR)
	@: > adaptors/lambda/$(DEPDIR)/$(am__dirstamp)
adaptors/lambda/lambda.lo: adaptors/lambda/$(am__dirstamp) \
	adaptors/lambda/$(DEPDIR)/$(am__dirstamp)
libsigc-2.0.la: $(libsigc_2.0_la_OBJECTS) $(libsigc_2.0_la_DEPENDENCIES) 
	$(libsigc_2.0_la_LINK) -rpath $(libdir) $(libsigc_2.0_la_OBJECTS) $(libsigc_2.0_la_LIBADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)
	-rm -f adaptors/lambda/lambda.$(OBJEXT)
	-rm -f adaptors/lambda/lambda.lo
	-rm -f functors/slot.$(OBJEXT)
	-rm -f functors/slot.lo
	-rm -f functors/slot_base.$(OBJEXT)
	-rm -f functors/slot_base.lo

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/connection.Plo
include ./$(DEPDIR)/lambda.Plo
include ./$(DEPDIR)/signal.Plo
include ./$(DEPDIR)/signal_base.Plo
include ./$(DEPDIR)/trackable.Plo
include adaptors/lambda/$(DEPDIR)/lambda.Plo
include functors/$(DEPDIR)/slot.Plo
include functors/$(DEPDIR)/slot_base.Plo

.cc.o:
	depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.o$$||'`;\
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
	mv -f $$depbase.Tpo $$depbase.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ $<

.cc.obj:
	depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.obj$$||'`;\
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ `$(CYGPATH_W) '$<'` &&\
	mv -f $$depbase.Tpo $$depbase.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cc.lo:
	depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.lo$$||'`;\
	$(LTCXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
	mv -f $$depbase.Tpo $$depbase.Plo
#	source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LTCXXCOMPILE) -c -o $@ $<

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs
	-rm -rf adaptors/lambda/.libs adaptors/lambda/_libs
	-rm -rf functors/.libs functors/_libs
install-nobase_library_includeHEADERS: $(nobase_library_include_HEADERS)
	@$(NORMAL_INSTALL)
	test -z "$(library_includedir)" || $(MKDIR_P) "$(DESTDIR)$(library_includedir)"
	@$(am__vpath_adj_setup) \
	list='$(nobase_library_include_HEADERS)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  $(am__vpath_adj) \
	  echo " $(nobase_library_includeHEADERS_INSTALL) '$$d$$p' '$(DESTDIR)$(library_includedir)/$$f'"; \
	  $(nobase_library_includeHEADERS_INSTALL) "$$d$$p" "$(DESTDIR)$(library_includedir)/$$f"; \
	done

uninstall-nobase_library_includeHEADERS:
	@$(NORMAL_UNINSTALL)
	@$(am__vpath_adj_setup) \
	list='$(nobase_library_include_HEADERS)'; for p in $$list; do \
	  $(am__vpath_adj) \
	  echo " rm -f '$(DESTDIR)$(library_includedir)/$$f'"; \
	  rm -f "$(DESTDIR)$(library_includedir)/$$f"; \
	done

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	if test -z "$(ETAGS_ARGS)$$tags$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	    $$tags $$unique; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) check-am
all-am: Makefile $(LTLIBRARIES) $(DATA) $(HEADERS)
installdirs:
	for dir in "$(DESTDIR)$(libdir)" "$(DESTDIR)$(library_includedir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-rm -f adaptors/lambda/$(DEPDIR)/$(am__dirstamp)
	-rm -f adaptors/lambda/$(am__dirstamp)
	-rm -f functors/$(DEPDIR)/$(am__dirstamp)
	-rm -f functors/$(am__dirstamp)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
	-test -z "$(BUILT_SOURCES)" || rm -f $(BUILT_SOURCES)
	-test -z "$(MAINTAINERCLEANFILES)" || rm -f $(MAINTAINERCLEANFILES)
clean: clean-am

clean-am: clean-generic clean-libLTLIBRARIES clean-libtool \
	mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR) adaptors/lambda/$(DEPDIR) functors/$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

info: info-am

info-am:

install-data-am: install-nobase_library_includeHEADERS

install-dvi: install-dvi-am

install-exec-am: install-libLTLIBRARIES

install-html: install-html-am

install-info: install-info-am

install-man:

install-pdf: install-pdf-am

install-ps: install-ps-am

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR) adaptors/lambda/$(DEPDIR) functors/$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-libLTLIBRARIES \
	uninstall-nobase_library_includeHEADERS

.MAKE: install-am install-strip

.PHONY: CTAGS GTAGS all all-am check check-am clean clean-generic \
	clean-libLTLIBRARIES clean-libtool ctags distclean \
	distclean-compile distclean-generic distclean-libtool \
	distclean-tags distdir dvi dvi-am html html-am info info-am \
	install install-am install-data install-data-am install-dvi \
	install-dvi-am install-exec install-exec-am install-html \
	install-html-am install-info install-info-am \
	install-libLTLIBRARIES install-man \
	install-nobase_library_includeHEADERS install-pdf \
	install-pdf-am install-ps install-ps-am install-strip \
	installcheck installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	tags uninstall uninstall-am uninstall-libLTLIBRARIES \
	uninstall-nobase_library_includeHEADERS


$(build_subdirs):
	$(MKDIR_P) $@

signal.cc:			\
	signal.h		\
	signal_base.h		\
	functors/slot.h		\
	functors/slot_base.h	\
	functors/mem_fun.h	\
	functors/functor_trait.h

adaptors/lambda/lambda.cc:		\
	adaptors/lambda/select.h	\
	adaptors/lambda/base.h		\
	adaptors/adaptor_trait.h	\
	adaptors/deduce_result_type.h	\
	functors/ptr_fun.h		\
	functors/mem_fun.h		\
	functors/functor_trait.h

functors/slot.cc:		\
	functors/slot.h		\
	functors/slot_base.h	\
	functors/functor_trait.h

%.h: macros/%.h.m4 $(m4_dir)/template.macros.m4 | $(build_subdirs)
	$(M4) -I $(m4_dir) -I macros $< >$@

%.cc: macros/%.cc.m4 $(m4_dir)/template.macros.m4 | $(build_subdirs)
	$(M4) -I $(m4_dir) -I macros $< >$@
# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
